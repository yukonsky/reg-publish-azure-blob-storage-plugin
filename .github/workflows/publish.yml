name: Publish to NPM
on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_ENDPOINT: "http://localhost:10000/devstoreaccount1"
      AZURE_STORAGE_ACCOUNT_NAME: "devstoreaccount1"
      AZURE_STORAGE_ACCOUNT_KEY: "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
    services:
      storage:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.9

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          registry-url: https://registry.npmjs.org
          git-checks: false
          always-auth: true
          scope: "@yukonsky"

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Build & Test
        run: pnpm build && pnpm test

      - name: Publish
        run: pnpm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get previous tag
        id: previous_tag
        run: |
          echo "tag=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_OUTPUT

      - name: Generate release note
        id: release_note
        run: |
          echo "release_note=$(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{ github.ref }}", "previous_tag_name":"${{ steps.previous_tag.outputs.tag }}"}' | jq .body | sed 's/"//g')" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ${{ steps.release_note.outputs.release_note }}
          draft: false
          prerelease: false
